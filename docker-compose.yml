version: "2.4"

services:
  app:
    image: roadbook:latest
    container_name: app
    environment:
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/roadbook_dev
      SECRET_KEY_BASE: LP0+zKfzBzgNcLvZ69yVuBE3+Wzopyc+15y+Wmz5r0+uva2+H2h5zqH+5LLOd/XK
      GRAFANA_HOST: http://grafana:3000
      GRAFANA_TOKEN: ${ACCOUNT_KEY:-}
      PHX_HOST: localhost
    depends_on:
      - postgres
      - prometheus
      - grafana
    ports:
      - 4000:4000
      - 4001:4001
  grafana:
    image: grafana/grafana:10.1.0
    container_name: grafana
    user: '472'
    environment:
      GF_AUTH_DISABLE_LOGIN_FORM: "true"
      GF_AUTH_ANONYMOUS_ENABLED: "true"
      GF_AUTH_ANONYMOUS_ORG_ROLE: "Admin"
    volumes:
      - ./priv/grafana/provisioning:/etc/grafana/provisioning
    ports:
      - 3000:3000
  livebook:
    image: ghcr.io/livebook-dev/livebook
    container_name: livebook
    ports:
      - 8080:8080
      - 8081:8081
    environment:
      - LIVEBOOK_PORT=8080
      - LIVEBOOK_IFRAME_PORT=8081
      - LIVEBOOK_TOKEN_ENABLED=false
    volumes:
      - .:/data
  postgres:
    container_name: postgres
    build: 
      context: .
      dockerfile: docker/postgis.Dockerfile
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: roadbook_dev
    ports:
      - 5432:5432
  prometheus:
    image: prom/prometheus:v2.26.0
    container_name: prometheus
    volumes:
      - ./priv/prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
