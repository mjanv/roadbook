<!-- livebook:{"autosave_interval_s":30} -->

# Geodata parsing

```elixir
Mix.install([
  {:roadbook, path: "."}
])
```

## Load data from a GPX file

```elixir
route = Roadbook.Positioning.GpxParser.read("priv/gps/test_komoot.gpx")
route = Roadbook.Positioning.Track.compute_route_from_gpx_data(route)

route = Enum.map(route, &Map.from_struct(&1))

stats = Roadbook.Positioning.Track.stats(route)
```

## Route Map

```elixir
MapLibre.new(
  style: :terrain,
  center: {List.first(route).lon, List.first(route).lat},
  zoom: 9
)
|> MapLibre.add_table_source(
  "map",
  %{
    "lat" => Enum.map(route, fn x -> x.lat end),
    "lon" => Enum.map(route, fn x -> x.lon end)
  },
  {:lng_lat, ["lon", "lat"]}
)
|> MapLibre.add_layer(
  id: "map_circle_1",
  source: "map",
  type: :circle,
  paint: [circle_color: "#edd400", circle_radius: 5, circle_opacity: 0.1]
)
|> MapLibre.add_layer(
  id: "map_circle_2",
  source: "map",
  type: :circle,
  paint: [circle_color: "#000000", circle_radius: 2, circle_opacity: 1]
)
```

## Profile Maps

<!-- livebook:{"attrs":{"chart_title":"Elevation","height":null,"layers":[{"active":true,"chart_type":"point","color_field":"gai","color_field_aggregate":null,"color_field_bin":null,"color_field_scale_scheme":null,"color_field_type":"quantitative","data_variable":"route","geodata_color":"blue","latitude_field":null,"longitude_field":null,"x_field":"pos","x_field_aggregate":null,"x_field_bin":null,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"ele","y_field_aggregate":null,"y_field_bin":null,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":800},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 800, title: "Elevation")
|> VegaLite.data_from_values(route, only: ["pos", "ele", "gai"])
|> VegaLite.mark(:point)
|> VegaLite.encode_field(:x, "pos", type: :quantitative)
|> VegaLite.encode_field(:y, "ele", type: :quantitative)
|> VegaLite.encode_field(:color, "gai", type: :quantitative)
```

<!-- livebook:{"attrs":{"chart_title":null,"height":null,"layers":[{"active":true,"chart_type":"bar","color_field":"dir","color_field_aggregate":null,"color_field_bin":null,"color_field_scale_scheme":null,"color_field_type":"quantitative","data_variable":"route","geodata_color":"blue","latitude_field":null,"longitude_field":null,"x_field":"pos","x_field_aggregate":null,"x_field_bin":null,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"gai","y_field_aggregate":null,"y_field_bin":null,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":800},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 800)
|> VegaLite.data_from_values(route, only: ["pos", "gai", "dir"])
|> VegaLite.mark(:bar)
|> VegaLite.encode_field(:x, "pos", type: :quantitative)
|> VegaLite.encode_field(:y, "gai", type: :quantitative)
|> VegaLite.encode_field(:color, "dir", type: :quantitative)
```

## Climb detector

```elixir
climbs = Roadbook.Climbs.ClimbDetector.find_climbs(route)
route = Roadbook.Climbs.ClimbDetector.annotate_climbs(route)
```

<!-- livebook:{"attrs":{"chart_title":null,"height":null,"layers":[{"active":true,"chart_type":"point","color_field":"is_climb","color_field_aggregate":null,"color_field_bin":null,"color_field_scale_scheme":null,"color_field_type":"quantitative","data_variable":"route","geodata_color":"blue","latitude_field":null,"longitude_field":null,"x_field":"pos","x_field_aggregate":null,"x_field_bin":null,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"ele","y_field_aggregate":null,"y_field_bin":null,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":800},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 800)
|> VegaLite.data_from_values(route, only: ["pos", "ele", "is_climb"])
|> VegaLite.mark(:point)
|> VegaLite.encode_field(:x, "pos", type: :quantitative)
|> VegaLite.encode_field(:y, "ele", type: :quantitative)
|> VegaLite.encode_field(:color, "is_climb", type: :quantitative)
```

```elixir
profile1000 =
  climbs
  |> Enum.map(fn range ->
    route
    |> Enum.filter(fn p -> p.pos in range end)
    |> Enum.map(&struct(Roadbook.Positioning.Point, &1))
    |> then(&%Roadbook.Climbs.ClimbProfile{segment: &1})
    |> Roadbook.Climbs.ClimbProfile.breakdown(1000)
    |> Enum.with_index(fn s, i -> Map.merge(s, %{pos: i}) end)
  end)
  |> Enum.at(2)

profile100 =
  climbs
  |> Enum.map(fn range ->
    route
    |> Enum.filter(fn p -> p.pos in range end)
    |> Enum.map(&struct(Roadbook.Positioning.Point, &1))
    |> then(&%Roadbook.Climbs.ClimbProfile{segment: &1})
    |> Roadbook.Climbs.ClimbProfile.breakdown(100)
    |> Enum.with_index(fn s, i -> Map.merge(s, %{pos: i}) end)
  end)
  |> Enum.at(2)
```

<!-- livebook:{"attrs":{"chart_title":null,"height":null,"layers":[{"active":true,"chart_type":"line","color_field":null,"color_field_aggregate":null,"color_field_bin":null,"color_field_scale_scheme":null,"color_field_type":null,"data_variable":"profile100","geodata_color":"blue","latitude_field":null,"longitude_field":null,"x_field":"pos","x_field_aggregate":null,"x_field_bin":null,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"slope","y_field_aggregate":null,"y_field_bin":null,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":800},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 800)
|> VegaLite.data_from_values(profile100, only: ["pos", "slope"])
|> VegaLite.mark(:line)
|> VegaLite.encode_field(:x, "pos", type: :quantitative)
|> VegaLite.encode_field(:y, "slope", type: :quantitative)
```

<!-- livebook:{"attrs":{"chart_title":null,"height":null,"layers":[{"active":true,"chart_type":"line","color_field":null,"color_field_aggregate":null,"color_field_bin":null,"color_field_scale_scheme":null,"color_field_type":null,"data_variable":"profile1000","geodata_color":"blue","latitude_field":null,"longitude_field":null,"x_field":"pos","x_field_aggregate":null,"x_field_bin":null,"x_field_scale_type":null,"x_field_type":"quantitative","y_field":"slope","y_field_aggregate":null,"y_field_bin":null,"y_field_scale_type":null,"y_field_type":"quantitative"}],"vl_alias":"Elixir.VegaLite","width":800},"chunks":null,"kind":"Elixir.KinoVegaLite.ChartCell","livebook_object":"smart_cell"} -->

```elixir
VegaLite.new(width: 800)
|> VegaLite.data_from_values(profile1000, only: ["pos", "slope"])
|> VegaLite.mark(:line)
|> VegaLite.encode_field(:x, "pos", type: :quantitative)
|> VegaLite.encode_field(:y, "slope", type: :quantitative)
```
